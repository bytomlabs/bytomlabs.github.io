{
  "filename": "09_ws_call.md",
  "__html": "<h2>Websocket Endpoint</h2>\n<p>Default Websocket endpoints:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Client</th>\n<th style=\"text-align:center\">URL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Go</td>\n<td style=\"text-align:center\">ws://localhost:9888/websocket-subscribe</td>\n</tr>\n</tbody>\n</table>\n<h3>Websocket Extension Methods (Websocket-specific)</h3>\n<h4>Method Overview</h4>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">#</th>\n<th style=\"text-align:center\">Topic</th>\n<th style=\"text-align:center\">Description</th>\n<th style=\"text-align:center\">NotificationType</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">notify_raw_blocks</td>\n<td style=\"text-align:center\">Send notifications when a block is connected or disconnected from the best chain.</td>\n<td style=\"text-align:center\">raw_blocks_connected raw_blocks_disconnected  request_status</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">stop_notify_raw_blocks</td>\n<td style=\"text-align:center\">Cancel registered notifications for whenever a block is connected or disconnected from the main (best) chain.</td>\n<td style=\"text-align:center\">None</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">notify_new_transactions</td>\n<td style=\"text-align:center\">Send notifications for all new transactions as they are accepted into the mempool.</td>\n<td style=\"text-align:center\">new_transaction  request_status</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">stop_notify_new_transactions</td>\n<td style=\"text-align:center\">Stop sending either a tx accepted  notification when a new transaction is accepted into the mempool.</td>\n<td style=\"text-align:center\">None</td>\n</tr>\n</tbody>\n</table>\n<h5>Request json format</h5>\n<p>example: {&quot;topic&quot;: &quot;notify_raw_blocks&quot;}</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">#</th>\n<th style=\"text-align:center\">field</th>\n<th style=\"text-align:center\">description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Topic</td>\n<td style=\"text-align:center\">Subscribe to the Topic of the message</td>\n</tr>\n</tbody>\n</table>\n<h5>Respone json format</h5>\n<p>example:{&quot;notification_type&quot;:&quot;raw_blocks_connected&quot;,&quot;data&quot;:&quot;0301ba9505dceb606ad2cffe7379d172ff8fc6c485d25ab9e051b18320deda2675cf6dfc61cc81bddf0540f13bffcbc3c3b76c1a34aba7c95b787c20a2b47366767ed1ce6ac9b5e9db8922c9c377e5192668bc0a367e4a4764f11e7c725ecced1d7b6a492974fab1b6d5bc90968080ea04879c9b83808080801e0107010001010802060038343636360001013effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8099c4d5990101160014d945f4ae7db4cd897f8d77d6d783b84a9d8ed9cc00&quot;}</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">#</th>\n<th style=\"text-align:center\">field</th>\n<th style=\"text-align:center\">description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">NotificationType</td>\n<td style=\"text-align:center\">The message type of the notification</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">Data</td>\n<td style=\"text-align:center\">data content</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">ErrorDetail</td>\n<td style=\"text-align:center\">Error message when returning notification type is request_status</td>\n</tr>\n</tbody>\n</table>\n<h5>Respone Error json format</h5>\n<p>example:  {&quot;notification_type&quot;:&quot;request_status&quot;,&quot;data&quot;:null,&quot;error_detail&quot;:&quot;Websocket Internal error: There is not this topic: notify_raw_blocks1&quot;}</p>\n<h4>Websocket Client Example for go</h4>\n<pre><code>package main\n\nimport (\n\t&quot;encoding/json&quot;\n\t&quot;flag&quot;\n\t&quot;fmt&quot;\n\t&quot;net/url&quot;\n\t&quot;os&quot;\n\t&quot;os/signal&quot;\n\n\tws &quot;github.com/bytom/net/websocket&quot;\n\t&quot;github.com/bytom/protocol/bc/types&quot;\n\t&quot;github.com/gorilla/websocket&quot;\n\tlog &quot;github.com/sirupsen/logrus&quot;\n)\n\nvar addr = flag.String(&quot;addr&quot;, &quot;localhost:9888&quot;, &quot;http service address&quot;)\n\nfunc main() {\n\n\tflag.Parse()\n\n\tinterrupt := make(chan os.Signal, 1)\n\tsignal.Notify(interrupt, os.Interrupt)\n\n\tu := url.URL{Scheme: &quot;ws&quot;, Host: *addr, Path: &quot;/websocket-subscribe&quot;}\n\tlog.Printf(&quot;connecting to %s&quot;, u.String())\n\n\tc, _, err := websocket.DefaultDialer.Dial(u.String(), nil)\n\tif err != nil {\n\t\tlog.Fatal(&quot;dial:&quot;, err)\n\t}\n\n\tdefer c.Close()\n\n\t// Subscribe to the raw blocks\n\treq := ws.WSRequest{\n\t\tTopic: &quot;notify_raw_blocks&quot;,\n\t}\n\tmsg, _ := json.Marshal(req)\n\tc.WriteMessage(websocket.TextMessage, msg)\n\n\t// Subscribe to the new transactions\n\treq = ws.WSRequest{\n\t\tTopic: &quot;notify_new_transactions&quot;,\n\t}\n\tmsg, _ = json.Marshal(req)\n\tc.WriteMessage(websocket.TextMessage, msg)\n\n\tfor {\n\t\t_, msg, err := c.ReadMessage()\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tbreak\n\t\t}\n\t\tvar rep ws.WSResponse\n\t\terr = json.Unmarshal(msg, &amp;rep)\n\t\tif err != nil {\n\t\t\tlog.Printf(&quot;Unmarshal error:&quot;, err)\n\t\t}\n\n\t\tfmt.Println(rep.NotificationType)\n\t\tswitch rep.NotificationType {\n\t\tcase &quot;raw_blocks_connected&quot;:\n\t\t\tdata := fmt.Sprint(rep.Data)\n\t\t\tblock := &amp;types.Block{}\n\t\t\terr = block.UnmarshalText([]byte(data))\n\t\t\tif err != nil {\n\t\t\t\tfmt.Println(err)\n\t\t\t}\n\t\t\tlog.Println(block)\n\t\tcase &quot;raw_blocks_disconnected&quot;:\n\t\t\tdata := fmt.Sprint(rep.Data)\n\t\t\tblock := &amp;types.Block{}\n\t\t\terr = block.UnmarshalText([]byte(data))\n\t\t\tif err != nil {\n\t\t\t\tfmt.Println(err)\n\t\t\t}\n\t\t\tlog.Println(block)\n\t\tcase &quot;new_transaction&quot;:\n\t\t\tdata := fmt.Sprint(rep.Data)\n\t\t\ttx := &amp;types.Tx{}\n\t\t\terr = tx.UnmarshalText([]byte(data))\n\t\t\tif err != nil {\n\t\t\t\tlog.Println(err)\n\t\t\t}\n\t\t\tlog.Println(tx)\n\t\tcase &quot;request_status&quot;:\n\t\t\tif rep.ErrorDetail != &quot;&quot; {\n\t\t\t\tlog.Println(rep.ErrorDetail)\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n</code></pre>\n",
  "link": "/en-us/docs/09_ws_call.html",
  "meta": {}
}