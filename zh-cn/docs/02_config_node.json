{
  "filename": "02_config_node.md",
  "__html": "<h2>配置节点</h2>\n<h2>可执行文件</h2>\n<p>Bytom项目在 <code>cmd</code> 目录下有以下执行文件:</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>bytomd</strong></td>\n<td>bytomd为节点运行主程序，可以帮助用户通过配置个性化参数来初始化和启动Bytom节点，运行<code>bytomd --help</code>查看命令行选项。</td>\n</tr>\n<tr>\n<td><strong>bytomcli</strong></td>\n<td>Bytom 命令行客户端. 它是Bytom全节点网络的入口，包括主网，测试网或者私有网络。其常被用于其他程序的网关，通过基于HTTP协议的 JSON RPC , WebSocket 或者 IPC通信来访问Bytom网络。 <code>bytomcli --help</code> 可以查看客户端使用方法，也可访问 <a href=\"https://github.com/Bytom/bytom/wiki/Command-Line-Options\">bytomcli Wiki page</a> 查看各命令使用指南。</td>\n</tr>\n</tbody>\n</table>\n<h2>运行Bytom</h2>\n<p>目前，Bytom仍在活跃的开发状态，<code>bytomd</code> 和 <code>bytomcli</code>命令的使用方法，可能因为项目不断进展中更新不完整，如果需要活的更多信息，请使用每个命令的help功能，例如 <code>bytomcli help</code>。</p>\n<h3>初始化</h3>\n<p>首先初始化节点:</p>\n<pre><code class=\"language-bash\">$ <span class=\"hljs-built_in\">cd</span> ./cmd/bytomd\n$ ./bytomd init --chain_id mainnet\n</code></pre>\n<p>通过选择不同标志来确定运行的网络 <code>--chain_id</code>:</p>\n<ul>\n<li><code>mainnet</code>: 连接入主网.</li>\n<li><code>testnet</code>: 连接入测试网wisdom.</li>\n<li><code>solonet</code>: 进入单机私有网络.</li>\n</ul>\n<p>运行后，可以看到生成配置文件<code>config.toml</code>，接着启动节点。</p>\n<h3>启动节点</h3>\n<pre><code class=\"language-bash\">$ ./bytomd node\n</code></pre>\n<p>可用的参数通过<code>bytomd node --help</code>展示:</p>\n<pre><code class=\"language-bash\">      --auth.disable                Disable rpc access authenticate\n      --chain_id string             选择网络类型\n  -h, --<span class=\"hljs-built_in\">help</span>                        帮助\n      --mining                      开启挖矿\n      --p2p.dial_timeout int        选择超时时长(default 3)\n      --p2p.handshake_timeout int   选择握手的时长 (default 30)\n      --p2p.laddr string            节点监听地址\n      --p2p.max_num_peers int       选择最大连接节点数 (default 50)\n      --p2p.pex                     允许节点交换  (default <span class=\"hljs-literal\">true</span>)\n      --p2p.seeds string            设置种子节点，格式为host:port，通过逗号分隔\n      --p2p.skip_upnp               省略 UPNP 配置\n      --prof_laddr string           使用HTTP来调试Bytom程序\n      --vault_mode                  运行在离线环境\n      --wallet.disable              关闭钱包功能\n      --wallet.rescan               重新扫描钱包数据\n      --web.closed                  开启或关闭Dashboard功能\n</code></pre>\n<p>假定 <code>bytomd</code>节点已经运行, 常规的工作流程步骤如下:</p>\n<ul>\n<li>\n<p>创建密钥且设置密码，接着使用Key创建账户或资产。</p>\n</li>\n<li>\n<p>创建交易，签名交易，将签名完的交易广播到网络中。</p>\n</li>\n<li>\n<p>通过客户端查看节点各类信息，比如可用的密钥，账户，交易详情和余额信息等。</p>\n</li>\n</ul>\n<h2>在Docker中运行</h2>\n<p>在操作之前，请自行安装docker。然后在你的终端输入：</p>\n<pre><code class=\"language-bash\">docker\n</code></pre>\n<p>出现如下图说明你已经安装成功了docker：</p>\n<p><img src=\"https://raw.githubusercontent.com/huangxinglong/picture/master/201812/1203/1.png\" alt=\"avatar\"></p>\n<h3>获取镜像</h3>\n<pre><code class=\"language-bash\">docker pull bytom/bytom:latest\n</code></pre>\n<p>用docker images 查看自己下载的bytom镜像</p>\n<pre><code class=\"language-bash\">docker images\n</code></pre>\n<p>然后出现如下图说明已经获取到了镜像：</p>\n<p><img src=\"https://raw.githubusercontent.com/huangxinglong/picture/master/201812/1203/4.png\" alt=\"avatar\"></p>\n<h3>初始化bytom</h3>\n<pre><code class=\"language-bash\">docker run -v &lt;Bytom/data/directory/on/host/machine&gt;:/root/.bytom bytom:latest bytomd init --chain_id &lt;chainId&gt;\n</code></pre>\n<p>默认的Bytom数据目录:</p>\n<ul>\n<li>MacOS: <code>~/Library/Application Support/Bytom</code></li>\n<li>Linux: <code>~/.bytom</code></li>\n<li>Windows: <code>%APPDATA%\\Bytom</code></li>\n</ul>\n<h3>进入命令行</h3>\n<pre><code class=\"language-bash\">docker run -it -p 9888:9888 -v &lt;Bytom/data/directory/on/host/machine&gt;:/root/.bytom bytom:latest\n</code></pre>\n<p>然后你可以使用 bytomd 和 bytomcli</p>\n<p>使用 <code>exit</code> 来退出命令行模式</p>\n<h3>守护进程模式</h3>\n<p>例如：</p>\n<pre><code class=\"language-bash\">docker run -d -p 9888:9888 -v &lt;Bytom/data/directory/on/host/machine&gt;:/root/.bytom bytom:latest bytomd node --web.closed --auth.disable\n</code></pre>\n<p><strong>列出正在运行的容器，检查他们的状态：</strong></p>\n<pre><code class=\"language-bash\">docker container ls\n</code></pre>\n<p>或者:</p>\n<pre><code class=\"language-bash\">docker ps\n</code></pre>\n<p>下图中我们可以看到我们在运行的容器：</p>\n<p><img src=\"https://github.com/huangxinglong/picture/raw/master/201812/1203/2.png\" alt=\"avatar\"></p>\n<p>在浏览器中请求：<a href=\"http://0.0.0.0:9888\">http://0.0.0.0:9888</a>，可以就可以看到我们的全节点钱包。</p>\n<p><img src=\"https://raw.githubusercontent.com/huangxinglong/picture/master/201812/1203/3.png\" alt=\"avatar\"></p>\n<p>在容器中执行命令，例如:</p>\n<pre><code class=\"language-bash\">docker <span class=\"hljs-built_in\">exec</span> -it &lt;containerId&gt; bytomcli create-access-token &lt;tokenId&gt;\n</code></pre>\n<p><strong>停止容器:</strong></p>\n<pre><code class=\"language-bash\">docker stop &lt;containerId&gt;\n</code></pre>\n<p><strong>移除容器:</strong></p>\n<pre><code class=\"language-bash\">docker rm &lt;containerId&gt;\n</code></pre>\n",
  "link": "/zh-cn/docs/02_config_node.html",
  "meta": {}
}