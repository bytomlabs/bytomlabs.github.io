{
  "filename": "13_1_mining_pool_docking_guide.md",
  "__html": "<h1>矿池对接文档</h1>\n<p><a name=\"1172f2d3\"></a></p>\n<h2>矿机配置</h2>\n<p><a href=\"https://gist.github.com/HAOYUatHZ/a47400bde4a138825faef415387b532c\">https://gist.github.com/HAOYUatHZ/a47400bde4a138825faef415387b532c</a></p>\n<p><a name=\"6f78a4be\"></a></p>\n<h2>固件升级</h2>\n<p><a href=\"https://service.bitmain.com.cn/support\">https://service.bitmain.com.cn/support</a></p>\n<ul>\n<li>两个都要刷,先后顺序没关系</li>\n<li><em>update_1000.tar.gz</em> 升级时间较长，升级期间请勿断电</li>\n</ul>\n<p><a name=\"bb3098d6\"></a></p>\n<h2>配置节点</h2>\n<ul>\n<li>测试时可以考虑切换到 testnet 分支降低难度使cpu挖矿也能出块，<code>./bytomd init --chain_id testnet</code> 或 <code>./bytomd init --chain_id solonet</code></li>\n<li><code>init</code>/<code>node</code> 初始化/启动时可以加上 <code>-r &quot;your/directory&quot;</code> 指定数据目录，若目录不存在则会自动新建该目录</li>\n</ul>\n<p><a name=\"f630b9a4\"></a></p>\n<h2>流程</h2>\n<p>1、初始化节点先建个账户、地址，不然就挖到空地址</p>\n<p>2、矿地址支持自定义，包括 非本地钱包地址</p>\n<p>3、<a href=\"https://github.com/Bytom/bytom/wiki/API-Reference\">API doc</a></p>\n<p>4、矿池向节点 <a href=\"https://github.com/Bytom/bytom/wiki/API-Reference#get-work\">getwork</a></p>\n<p><code>get-work</code> 得到的 <code>block_header</code> 是动态压缩变长的需要进行解析</p>\n<ul>\n<li>使用 <em>golang</em> 的话可以利用 <code>&quot;github.com/bytom/protocol/bc/types&quot;</code> 中 <code>block_header.go</code> 中的函数 <code>UnmarshalText</code></li>\n<li>使用别的语言的话参考 <code>&quot;github.com/bytom/protocol/bc/types&quot;</code> 中 <code>block.go</code> 中的函数 <code>UnmarshalText</code>, <code>readFrom</code>, <code>ReadVarintXXX</code>. <code>ReadVarintXXX</code> 需要参考 <a href=\"https://go.googlesource.com/go/+/go1.4.3/src/encoding/binary/varint.go\">go函数 <code>binary.ReadUvarint</code></a></li>\n</ul>\n<p>5、解析完后进行下发</p>\n<ul>\n<li>通信格式参考 <a href=\"https://github.com/Bytom/B3-Mimic/blob/master/docs/STRATUM-BTM.md\">https://github.com/Bytom/B3-Mimic/blob/master/docs/STRATUM-BTM.md</a> - 收到任务有 <code>login</code> 和 矿池主动下发, 没走 <code>getjob</code>, 只走 <code>login</code> 和 池主动下发 - 这俩都是用 <code>submit</code> 提交</li>\n<li>逻辑参考 <a href=\"https://github.com/Bytom/B3-Mimic/blob/master/main.go\">https://github.com/Bytom/B3-Mimic/blob/master/main.go</a> - <code>Version</code>, <code>Height</code>, <code>Timestamp</code>, <code>Bits</code> 要转小端 - 关于 <code>target</code> + <em>btc.com_antpool</em> 的代码 ~, 并说 <code>target</code> 用以对 <code>bits</code> 对应的 <code>difficulty</code> 放松难度，用来使矿机在单位时间内能够有提交，然后矿池再验证~</li>\n</ul>\n<pre><code>var Diff1 = StringToBig(&quot;0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF&quot;)\n\n    func GetTargetHex(diff int64) string {\n        padded := make([]byte, 32)\n        diffBuff := new(big.Int).Div(Diff1, big.NewInt(diff)).Bytes()\n        copy(padded[32-len(diffBuff):], diffBuff)\n        buff := padded[0:4]\n        targetHex := hex.EncodeToString(Reverse(buff))\n        return targetHex\n     }\n</code></pre>\n<ul>\n<li>矿池下发的targethex是拿 标准难度（<code>0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</code>） / 一个难度值得出的</li>\n<li>这个值叫做矿池难度 一般会动态调整 保证矿机提交 share 的频率是稳定的 比如1分钟提交三次 提交得快了就会增加这个值 慢了就会降低这个值</li>\n<li>target 是 16 进制的难度，1, 1024, …..等等，和前导 0 的个数有关，动态调整用来保证矿机每分钟至少提交三次，用来计算矿机算力以及防止矿机算力作弊 <code>ffff3f00</code> 对应 1024，<code>c5a70000</code> 对应 100001</li>\n</ul>\n<p>6、提交完之后矿池需要做验证</p>\n<ul>\n<li>header_hash 使用 golang 的话可以利用 <code>&quot;github.com/bytom/protocol/bc/types&quot;</code> 中 <code>types.BlockHeader{}</code> 的 <code>Hash()</code> 使用别的语言的话参考 <a href=\"https://github.com/Bytom/B3-Mimic/blob/master/docs/blhr_hash_V3.go\">https://github.com/Bytom/B3-Mimic/blob/master/docs/blhr_hash_V3.go</a></li>\n<li>然后就要开始用 tensority 算 hash 结果 很遗憾现在 go 版本、cpp_openblas 版本、cpp_simd 版本都达不到理想的验证效果, 如果想做一个可用的矿池目前有必要上 gpu, 可以考虑 n 卡 1050，或者阿里云服务器 P4</li>\n</ul>\n<blockquote>\n<p>cpp 的 tensority 逻辑在<a href=\"https://github.com/Bytom/CppTensority\">这里</a>，并指出了如何针对 gpu 进行优化的建议，这样矩阵乘法能够跑进 2.5 ms, 整个 tensority 大概 6 ms</p>\n</blockquote>\n<ul>\n<li>init matlist 有开销，seed 其实 256 个区块才改变一次, 遇到新的 seed 每次 gpu tensority 可能需要 100 ms，但做了 cache 的话 init matlist 可以忽略，可以认为每次 tensority 只需要不超过 6 ms</li>\n<li>用 golang 可以 cgo 调用 c 代码，参考 <a href=\"https://github.com/Bytom/bytom/blob/dev-ts-simd/mining/tensority/algorithm.go\">https://github.com/Bytom/bytom/blob/dev-ts-simd/mining/tensority/algorithm.go</a></li>\n<li>改好 gpu 版本后可以参照这个进行调用</li>\n</ul>\n<p>7、验证通过后使用 <a href=\"https://github.com/Bytom/bytom/wiki/API-Reference#submit-work\">submit-work</a> 接口进行提交</p>\n<p>提交的结果 也是 BlockHeader type 的</p>\n<ul>\n<li>使用 <em>golang</em> 的话可以利用 <code>&quot;github.com/bytom/protocol/bc/types&quot;</code> 中 <code>block_header.go</code> 中的函数 <code>MmarshalText</code></li>\n<li>使用别的语言的话参考 <code>&quot;github.com/bytom/protocol/bc/types&quot;</code> 中 <code>block.go</code> 中的函数 <code>MarshalText</code>, <code>WriteTo</code>, <code>WriteVarintXXX</code>. <code>WriteVarintXXX</code> 需要参考 <a href=\"https://go.googlesource.com/go/+/go1.4.3/src/encoding/binary/varint.go\">go函数 <code>binary.PutUvarint</code></a></li>\n</ul>\n<p>8、retarget</p>\n<p>见上面，动态调整使矿机每分钟提交三次</p>\n<p>9、收益计算</p>\n<p>略</p>\n<p><a name=\"cbd08f58\"></a></p>\n<h2>批量转账</h2>\n<ul>\n<li>主网地址 bm 开头，长度普通地址42，多签62 工具 <a href=\"https://github.com/Bytom/bytom/tree/master/tools/sendbulktx\">https://github.com/Bytom/bytom/tree/master/tools/sendbulktx</a></li>\n<li>每次发币都会生成新的找零地址</li>\n<li>bytom input有21个的限制</li>\n</ul>\n",
  "link": "/zh-cn/docs/13_1_mining_pool_docking_guide.html",
  "meta": {
    "title": "矿池对接文档"
  }
}