{
  "filename": "11_4_websocket.md",
  "__html": "<h1>Websocket调用节点</h1>\n<p><a name=\"5ea13ef4\"></a></p>\n<h2>默认 Websocket 调用点</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Client</th>\n<th style=\"text-align:center\">URL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Go</td>\n<td style=\"text-align:center\">ws://localhost:9888/websocket-subscribe</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"ff038d89\"></a></p>\n<h2>Websocket 扩展方法</h2>\n<p><a name=\"fbc5842c\"></a></p>\n<h3>方法概述</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">#</th>\n<th style=\"text-align:center\">Topic</th>\n<th style=\"text-align:center\">Description</th>\n<th style=\"text-align:center\">NotificationType</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">notify_raw_blocks</td>\n<td style=\"text-align:center\">Send notifications when a block is connected or disconnected from the best chain.</td>\n<td style=\"text-align:center\">raw_blocks_connected raw_blocks_disconnected  request_status</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">stop_notify_raw_blocks</td>\n<td style=\"text-align:center\">Cancel registered notifications for whenever a block is connected or disconnected from the main (best) chain.</td>\n<td style=\"text-align:center\">None</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">notify_new_transactions</td>\n<td style=\"text-align:center\">Send notifications for all new transactions as they are accepted into the mempool.</td>\n<td style=\"text-align:center\">new_transaction  request_status</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">stop_notify_new_transactions</td>\n<td style=\"text-align:center\">Stop sending either a tx accepted  notification when a new transaction is accepted into the mempool.</td>\n<td style=\"text-align:center\">None</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"0cb5b45a\"></a></p>\n<h3>请求的json格式</h3>\n<p>例子: {&quot;topic&quot;: &quot;notify_raw_blocks&quot;}</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">#</th>\n<th style=\"text-align:center\">field</th>\n<th style=\"text-align:center\">description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Topic</td>\n<td style=\"text-align:center\">Subscribe to the Topic of the message</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"68f6a8fb\"></a></p>\n<h3>返回的json格式</h3>\n<p>例子:</p>\n<pre><code class=\"language-javascript\">{<span class=\"hljs-string\">\"notification_type\"</span>:<span class=\"hljs-string\">\"raw_blocks_connected\"</span>,<span class=\"hljs-string\">\"data\"</span>:<span class=\"hljs-string\">\"0301ba9505dceb606ad2cffe7379d172ff8fc6c485d25ab9e051b18320deda2675cf6dfc61cc81bddf0540f13bffcbc3c3b76c1a34aba7c95b787c20a2b47366767ed1ce6ac9b5e9db8922c9c377e5192668bc0a367e4a4764f11e7c725ecced1d7b6a492974fab1b6d5bc90968080ea04879c9b83808080801e0107010001010802060038343636360001013effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8099c4d5990101160014d945f4ae7db4cd897f8d77d6d783b84a9d8ed9cc00\"</span>}\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">#</th>\n<th style=\"text-align:center\">field</th>\n<th style=\"text-align:center\">description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">NotificationType</td>\n<td style=\"text-align:center\">The message type of the notification</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">Data</td>\n<td style=\"text-align:center\">data content</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">ErrorDetail</td>\n<td style=\"text-align:center\">Error message when returning notification type is request_status</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"3cef2c7f\"></a></p>\n<h3>返回错误的json格式</h3>\n<p>例子:<br /></p>\n<pre><code class=\"language-javascript\"> {<span class=\"hljs-string\">\"notification_type\"</span>:<span class=\"hljs-string\">\"request_status\"</span>,<span class=\"hljs-string\">\"data\"</span>:<span class=\"hljs-literal\">null</span>,<span class=\"hljs-string\">\"error_detail\"</span>:<span class=\"hljs-string\">\"Websocket Internal error: There is not this topic: notify_raw_blocks1\"</span>}\n</code></pre>\n<p><a name=\"1f8c5a26\"></a></p>\n<h3>Go语言websocket客户端实例</h3>\n<pre><code>package main\nimport (\n    &quot;encoding/json&quot;\n    &quot;flag&quot;\n    &quot;fmt&quot;\n    &quot;net/url&quot;\n    &quot;os&quot;\n    &quot;os/signal&quot;\n    ws &quot;github.com/bytom/net/websocket&quot;\n    &quot;github.com/bytom/protocol/bc/types&quot;\n    &quot;github.com/gorilla/websocket&quot;\n    log &quot;github.com/sirupsen/logrus&quot;\n)\nvar addr = flag.String(&quot;addr&quot;, &quot;localhost:9888&quot;, &quot;http service address&quot;)\nfunc main() {\n    flag.Parse()\n    interrupt := make(chan os.Signal, 1)\n    signal.Notify(interrupt, os.Interrupt)\n    u := url.URL{Scheme: &quot;ws&quot;, Host: *addr, Path: &quot;/websocket-subscribe&quot;}\n    log.Printf(&quot;connecting to %s&quot;, u.String())\n    c, _, err := websocket.DefaultDialer.Dial(u.String(), nil)\n    if err != nil {\n        log.Fatal(&quot;dial:&quot;, err)\n    }\n    defer c.Close()\n    // Subscribe to the raw blocks\n    req := ws.WSRequest{\n        Topic: &quot;notify_raw_blocks&quot;,\n    }\n    msg, _ := json.Marshal(req)\n    c.WriteMessage(websocket.TextMessage, msg)\n    // Subscribe to the new transactions\n    req = ws.WSRequest{\n        Topic: &quot;notify_new_transactions&quot;,\n    }\n    msg, _ = json.Marshal(req)\n    c.WriteMessage(websocket.TextMessage, msg)\n    for {\n        _, msg, err := c.ReadMessage()\n        if err != nil {\n            fmt.Println(err)\n            break\n        }\n        var rep ws.WSResponse\n        err = json.Unmarshal(msg, &amp;rep)\n        if err != nil {\n            log.Printf(&quot;Unmarshal error:&quot;, err)\n        }\n        fmt.Println(rep.NotificationType)\n        switch rep.NotificationType {\n        case &quot;raw_blocks_connected&quot;:\n            data := fmt.Sprint(rep.Data)\n            block := &amp;types.Block{}\n            err = block.UnmarshalText([]byte(data))\n            if err != nil {\n                fmt.Println(err)\n            }\n            log.Println(block)\n        case &quot;raw_blocks_disconnected&quot;:\n            data := fmt.Sprint(rep.Data)\n            block := &amp;types.Block{}\n            err = block.UnmarshalText([]byte(data))\n            if err != nil {\n                fmt.Println(err)\n            }\n            log.Println(block)\n        case &quot;new_transaction&quot;:\n            data := fmt.Sprint(rep.Data)\n            tx := &amp;types.Tx{}\n            err = tx.UnmarshalText([]byte(data))\n            if err != nil {\n                log.Println(err)\n            }\n            log.Println(tx)\n        case &quot;request_status&quot;:\n            if rep.ErrorDetail != &quot;&quot; {\n                log.Println(rep.ErrorDetail)\n            }\n        }\n    }\n}\n</code></pre>\n",
  "link": "/zh-cn/docs/11_4_websocket.html",
  "meta": {}
}